标识符是做为一个称呼；

常用的标识符：


包机制：
    一般利用公司域名倒置作为包名；
    package pkg1[pkg2[pkg3]]
    为了能够使用某一个包的成员，我们需要在java程序中明确导入该包，使用import语句可完成此功能
    import package1[...]


生成javadoc，命令： javadoc 参数 java文件
    javadoc -encoding UTF-8 -charset UTF-8 Doc01.java
使用idea生成javaDoc文档!

Scanner对象：
    获取用户的输入；
    Scanner s = new Scannner(System.in);
    使用Next()与nextLine()方法获取输入的字符串
    使用hasNext()于hasNextLine()判断是否还有输入的数据;

JAVA的基本结构是顺序结构，除非特别指明，否则就按照顺序执行；

JAVA是方法详解：JAVA是面向对象语言，于是乎某某对象的什么方法；
函数是C语言这样的面向过程编程语言;

    1.所谓防范
    2.方法的定义及调用
    3.方法的重载
    4.命令行传参
    5.可变参数
    6.递归

System.out.println()，是对象的方法 的实现；
调用对象的方法;

方法是什么？
    Java方法是语句的集合，它们在一起执行一个功能；
    方法是解决一类问题的步骤的有序组合
    方法包含于类或对象中；
    方法在程序中被创建，在其他地方被引用;
    设计原子是：保持方法的原子性，一次只实现一个功能，方便扩展;
命名规则：
    驼峰命名法；

JAVA方法的重载：
    方法名称必须相同；
    参数列表必须不同。
    方法的返回类型可以相同也可以不同；个数不同，类型不同，参数排列顺序不同;
    仅仅返回类型不同不足以成为方法的重载;
实现理论：
    方法名称相同时，编译器会根据调用方法的参数个数，参数类型等去逐个匹配；
    以选择对应的方法，如果匹配失败，则编译器报错。


命令行传参?

可变参数：
    1.从java1.5开始，java支持传递同类型的可变参数给一个方法；
    2.在指定参数类型后加一个省略号
    3.一个方法只能指定一个可变参数，它必须是方法的最后一个参数，任何参数
    必须在它之前声明；

递归： // 基数比较小可以使用栈，大机制不要用java递归,是思想的学习
    A方法调用B方法，我们容易理解；
    递归就是： A方法调用A方法！就是自己调用自己
    递归结构包括两个部分：
        递归头：什么时候不调用自身方法，如果没有头，将陷入死循环；
        递归体：什么时候需要调用自身方法;
    边界条件：边界
    前阶段：
    返回阶段 n*(n-1)

栈机制：
    java都是栈机制;

// 写一个计算器，要求实现加减乘除功能，并且能够循环接收新的数据，通过用户交互实现;
// 思路推荐；
// 利用循环+switch进行用户交互
// 传递需要操作的两个数
// 输出结果

冒泡排序：
    冒泡的代码还是相当简单的，两层循环，外层冒泡轮数，里层依次比较，
    江湖中人人皆知。我们看到嵌套循环，应该马上就可以得出这个算法的时间复杂度为n的平方；

稀疏数组：
    当大部分元素为0，其他的很少是有效的；大部分是没有意义的，

