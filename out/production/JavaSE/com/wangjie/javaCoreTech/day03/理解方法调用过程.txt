理解方法调用：
	1、编译器查看对象的声明类型和方法
	2、接下来，编译器确定方法调用中提供的参数类型，以此确定调用哪一个具体方法。
	3、如果是private、static、final方法或者构造器，那么编译器将可以准确的知道应该调用哪个方法，这成为静态绑定。
	4、程序运行并且采用动态绑定调用方法时，虚拟机必须调用对应的方法，而这些被调用的方法都放在了一张候选表中（抽象）。

确定方法并调用：
	在运行时，调用e.getSalary()的解析过程为：
	1、首先，虚拟机获取e的实际类型的方法表。
	2、接下来，虚拟机查看定义了getSalary()签名的类
	3、最后虚拟机直接调用这个方法

动态绑定有一个非常重要的特性：无须对现有的代码进行修改就可以对程序进行拓展。